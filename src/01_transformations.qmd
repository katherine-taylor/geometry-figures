---
title: 'Make Geometry Figures'
author: 'Katherine'
date: '`r format(Sys.time(), "%d %B, %Y")`'
editor_options: 
  markdown: 
    wrap: 72
---

```{r}
#| label: setup
#| warning: false
#| include: false
library(tidyverse)
library(ggrepel)
library(ggh4x)
```

# Create a transformation figure

```{r}
#| label: triangle tibble

# @TODO: create function to generate shapes
triangles <-
  tibble(
    x = c(4, 4, 7, -1, -1, 2),
    y = c(4, 8, 4, 6, 10, 6),
    name = c("A", "B", "C", "A'", "B'", "C'"),
    shape_name = c(rep("preimage", 3), rep("image", 3)),
    shape_color = c(rep("blue", 3), rep("red", 3))
  )

# @TODO: fix aspect ratio
# https://stackoverflow.com/questions/17753101/center-x-and-y-axis-with-ggplot2
triangles |>
  ggplot(aes(
    x = x,
    y = y,
    color = shape_color,
    label = paste(name, " (", x, ",", y, ")", sep = "")
  )) +
  coord_axes_inside(labels_inside = TRUE) + # from package ggh4x
  geom_vline(aes(xintercept = 0)) + # emphasizes the axis lines
  geom_hline(aes(yintercept = 0)) +
  scale_y_continuous(breaks = seq(-10, 10, by = 1)) +
  scale_x_continuous(breaks = seq(-10, 10, by = 1)) +
  # plots the actual polygons
  geom_polygon(fill = "NA", linewidth = 1) +
  geom_point() +
  geom_label_repel() +
  # theme code
  scale_color_identity() +
  theme_bw() +
  theme(
    panel.grid.major = element_line(
      color = "black",
      linewidth = 0.25, # need to use linewidth instead of size
      linetype = 1
    ),
    aspect.ratio = 1, # makes the graph square
    panel.grid.minor = element_blank(),
    legend.position = "none",
  )


ggsave(here::here("output/question_1.png"))
```

```{r}
#| label: square tibble
squares <-
  tibble(
    x = c(2, 2, 6, 6, 5, 5, 9, 9),
    y = c(2, 6, 6, 2, 0, 4, 4, 0),
    name = c("A", "B", "C", "D", "A'", "B'", "C'", "D'"),
    shape_name = c(rep("preimage", 4), rep("image", 4)),
    shape_color = c(rep("blue", 4), rep("red", 4))
  )

# https://stackoverflow.com/questions/17753101/center-x-and-y-axis-with-ggplot2
squares |>
  ggplot(aes(
    x = x,
    y = y,
    color = shape_color,
    label = paste(name, " (", x, ",", y, ")", sep = "")
  )) +
  coord_axes_inside(labels_inside = TRUE) + # from package ggh4x
  geom_vline(aes(xintercept = 0)) + # emphasizes the axis lines
  geom_hline(aes(yintercept = 0)) +
  scale_y_continuous(breaks = seq(-10, 10, by = 1)) +
  scale_x_continuous(breaks = seq(-10, 10, by = 1)) +
  # plots the actual polygons
  geom_polygon(fill = "NA", linewidth = 1) +
  geom_point() +
  geom_label_repel() +
  # theme code
  scale_color_identity() +
  theme_bw() +
  theme(
    panel.grid.major = element_line(
      color = "black",
      linewidth = 0.25, # need to use linewidth instead of size
      linetype = 1
    ),
    aspect.ratio = 1, # makes the graph square
    panel.grid.minor = element_blank(),
    legend.position = "none",
  )


ggsave(here::here("output/question_2.png"))
```

```{r}
#| label: second triangle
triangles_2 <-
  tibble(
    x = c(-4, -4, -7, 4, 4, 7),
    y = c(4, 8, 4, 4, 8, 4),
    name = c("A", "B", "C", "A'", "B'", "C'"),
    shape_name = c(rep("preimage", 3), rep("image", 3)),
    shape_color = c(rep("blue", 3), rep("red", 3))
  )
# https://stackoverflow.com/questions/17753101/center-x-and-y-axis-with-ggplot2
triangles_2 |>
  ggplot(aes(
    x = x,
    y = y,
    color = shape_color,
    label = paste(name, " (", x, ",", y, ")", sep = "")
  )) +
  coord_axes_inside(labels_inside = TRUE) + # from package ggh4x
  geom_vline(aes(xintercept = 0)) + # emphasizes the axis lines
  geom_hline(aes(yintercept = 0)) +
  scale_y_continuous(breaks = seq(-10, 10, by = 1)) +
  scale_x_continuous(breaks = seq(-10, 10, by = 1)) +
  # plots the actual polygons
  geom_polygon(fill = "NA", linewidth = 1) +
  geom_point() +
  geom_label_repel() +
  # theme code
  scale_color_identity() +
  theme_bw() +
  theme(
    panel.grid.major = element_line(
      color = "black",
      linewidth = 0.25, # need to use linewidth instead of size
      linetype = 1
    ),
    aspect.ratio = 1, # makes the graph square
    panel.grid.minor = element_blank(),
    legend.position = "none",
  )


ggsave(here::here("output/question_3.png"))
```

